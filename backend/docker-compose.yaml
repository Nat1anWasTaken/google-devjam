services:
  # MinIO S3 Compatible Storage
  minio:
    image: minio/minio:latest
    container_name: devjam-minio
    restart: unless-stopped
    platform: linux/arm64
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9002:9000" # MinIO API
      - "9003:9001" # MinIO Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - devjam-network

  # MinIO Client (mc) for bucket initialization
  minio-init:
    image: minio/mc:latest
    container_name: devjam-minio-init
    platform: linux/arm64
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb myminio/devjam-audio --ignore-existing;
      mc anonymous set download myminio/devjam-audio;
      echo 'MinIO bucket setup complete with public read access';
      "
    networks:
      - devjam-network

volumes:
  minio_data:
    driver: local
  tts_cache:
    driver: local

networks:
  devjam-network:
    driver: bridge
